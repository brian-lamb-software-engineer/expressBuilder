/*****************
 * expressBuilder *
 ******************
/**
 * GULP
 *
 * What do we want gulp to do today folks?
 *
 * Parent Task list
 * ----------------
 * -compile-vendors (sources node modules to vendor repo, a one off command
 *                  needed only after adjustment of vendor/sources)
 * -build           (builds src into www, sources and needed vendor to src, and
 *                  ready to be served)
 * -develop         (Includes watch, and loads server, and does not build or
                    compile)
 * -all             runs compile-vendor, then build, then develop
 * -default         (runs develop only)
 *
 * Main usage commands:
 * $ gulp compile-vendors (processes specified vendor files from node_module
      sources, and outputs them to a ./vendor directory for use)
 * $ gulp build (deletes selected files in build dir(most if not all), compiles
      all source and assets, including any specified vendors, lints and uglifies
      all javascript, processes any sass, processes specified images, copies in
      specified fonts, minifies all css, outputs to the http hosted build dir)
 * $ gulp develop (or just gulp) (lints all js, including gulpfile and server
      app.js, then starts the live reload server for instant development updates
      for css, js, and templates, and starts a file watch on those files to
      trigger the reloads.  This server was set up so that you will not need the
      chrome live reload plugin for this setup, therefore this will work cross-
      browser on multiple browsers at the same time, all opened to various
      responsive sizes.  This delivers an ultimate development experience.)
 *
 * Alt commands:
 * $ gulp gls (to directly start live reload server, and watch)
 * $ npm start (which bypasses livereload server altogether, and starts a normal
 *   http server, without livereload features. run anytime after build complete)
 *
 * This setup is not constrained to using JADE as a template engine, or sass as
 * the main CSS pre processor, nor is it consrained to using jquery and bootstrap
 * or font-awesome.  You can remove these modules and replace them with your
 * favorite.
 *
 * Modernizr, Angular and maybe underscore will soon be added, but you
 * can choose ember, backbone, etc..  The current usage of Mongoose ODM will be
 * kept, but its current role doubling as the CRUD module may be mostly be
 * replaced by Angular, however, I plan to keep JADE for the template engine.
 *
 * A fresh breath of air!
 */
 var gulp = require('gulp'),
   gutil =         require('gulp-util'),
    runSequence =   require('run-sequence');

 const gulpRequireTasks = require('gulp-require-tasks');
 gulpRequireTasks({
   path: process.cwd() + '/src/assets/js/gulp'
 });

 /**
  * Task default
  */
 gulp.task('default', ['develop']);

